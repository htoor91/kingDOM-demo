{"version":3,"sources":["webpack:///webpack/bootstrap e43796edc26ab0205679","webpack:///./js/main.js","webpack:///./kingDOM/kingDOM.js","webpack:///./kingDOM/dom_node_collection.js","webpack:///./js/snake-view.js","webpack:///./js/board.js","webpack:///./js/snake.js","webpack:///./js/coord.js","webpack:///./js/apple.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;;;;;;ACVD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,sBAAqB;AACrB,eAAc;AACd,uDAAsD;AACtD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;ACnFA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;;;;;;;ACrIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB,oBAAoB;AACvC;AACA,sBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACrGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB,SAAS;AAC5B;AACA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC7CA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AChGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e43796edc26ab0205679\n **/","const $d = require('./../kingDOM/kingDOM');\nconst View = require('./snake-view');\n\n$d(() => {\n  const rootEl = $d('.grid');\n  $d(\".start\").on(\"click\", () => {\n    $d(\".grid\").removeClass(\"hide\");\n    $d(\".score\").html(\"0\");\n    new View(rootEl);\n  });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","const DOMNodeCollection = require('./dom_node_collection.js');\n\nconst functionQueue = [];\nlet docReady = false;\n\nwindow.$d = $d;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  docReady = true;\n  functionQueue.forEach((fn) => {\n    fn();\n  });\n});\n\nfunction $d(selector) {\n  if (typeof selector === 'string') {\n    return getNodesFromDOM(selector);\n  } else if (selector instanceof HTMLElement || selector === window) {\n    return new DOMNodeCollection([selector]);\n  } else if (typeof selector === 'function') {\n    return documentReadyCallback(selector);\n  }\n}\n\n$d.extend = function(...args) {\n  let merged = args[0];\n  args.slice(1).forEach((obj) => {\n    Object.keys(obj).forEach((key) => {\n      merged[key] = obj[key];\n    });\n  });\n\n  return merged;\n};\n\n$d.ajax = function (options) {\n  return new Promise((resolve, reject) => {\n    const defaults = {\n      type: 'GET',\n      url: document.URL,\n      success: () => {},\n      error: () => {},\n      data: {},\n      contentType: 'application/x-www-form-urlencoded; charset=UTF-8'\n    };\n\n    const xhr = new XMLHttpRequest();\n    options = $d.extend(defaults, options);\n    options.type = options.type.toUpperCase();\n    xhr.open(options.type, options.url, true);\n\n    xhr.onload = (e) => {\n      const response = JSON.parse(xhr.response);\n\n      if (xhr.status === 200) {\n        options.success(response);\n        resolve(response);\n      } else {\n        options.error(response);\n        reject(response);\n      }\n    };\n\n    xhr.send(options.data);\n  });\n};\n\n// helper methods\n\nfunction getNodesFromDOM(selector) {\n  const nodes = document.querySelectorAll(selector);\n  const nodesArr = Array.from(nodes);\n  return new DOMNodeCollection(nodesArr);\n}\n\nfunction documentReadyCallback(fn) {\n  if (docReady) {\n    fn();\n  } else {\n    functionQueue.push(fn);\n  }\n}\n\nmodule.exports = $d;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./kingDOM/kingDOM.js\n ** module id = 1\n ** module chunks = 0\n **/","class DOMNodeCollection {\n  constructor(nodes){\n    this.nodes = nodes;\n  }\n\n  each(cb) {\n    this.nodes.forEach(cb);\n  }\n\n  html(newHtml) {\n    if (newHtml) {\n      this.each((node) => {\n        node.innerHTML = newHtml;\n      });\n      return this.nodes;\n    } else {\n      return this.nodes[0].innerHTML;\n    }\n  }\n\n  empty() {\n    this.each((node) => {\n      node.innerHTML = \"\";\n    });\n\n    return this.nodes;\n  }\n\n  append(arg) {\n    if (this.nodes.length === 0) return;\n\n    if (typeof arg === \"string\") {\n      this.each((node) => {\n        node.innerHTML += arg;\n      });\n    } else if (arg instanceof DOMNodeCollection) {\n      this.each((parent) => {\n        arg.each((child) => {\n          parent.appendChild(child);\n        });\n      });\n    }\n    return this.nodes;\n  }\n\n  attr(attribute, value) {\n    if (typeof value === \"string\") {\n      this.each((node) => {\n        node.setAttribute(attribute, value);\n      });\n      return this.nodes;\n    } else {\n      return this.nodes[0].getAttribute(attribute);\n    }\n  }\n\n  addClass(className) {\n    const classNames = className.split(' ');\n\n    this.each((node) => {\n      classNames.forEach((name) => {\n        node.classList.add(name);\n      });\n    });\n\n    return this.nodes;\n  }\n\n  removeClass(className) {\n\n    this.each((node) => {\n      node.classList.remove(className);\n    });\n\n    return this.nodes;\n  }\n\n  children() {\n    const childrenArr = [];\n\n    this.each((node) => {\n      childrenArr.push(node.children);\n    });\n\n    return new DOMNodeCollection(childrenArr);\n  }\n\n  parent() {\n    const parents = [];\n\n    this.each((node) => {\n      parents.push(node.parentNode);\n    });\n\n    return new DOMNodeCollection(parents);\n  }\n\n  find(selector) {\n    const found = [];\n\n    this.each((node) => {\n      found.push(node.querySelectorAll(selector));\n    });\n\n    return new DOMNodeCollection(found);\n  }\n\n  remove() {\n    this.each((node) => {\n      node.remove();\n    });\n  }\n\n  eq(idx) {\n    return new DOMNodeCollection([this.nodes[idx]]);\n  }\n\n  on(action, cb) {\n    this.each((node) => {\n      node.addEventListener(action, cb);\n      node.eventCallback = cb;\n    });\n  }\n\n  off(action) {\n    this.each((node) => {\n      const cb = node.eventCallback;\n      node.removeEventListener(action, cb);\n    });\n  }\n\n}\n\nmodule.exports = DOMNodeCollection;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./kingDOM/dom_node_collection.js\n ** module id = 2\n ** module chunks = 0\n **/","const Board = require('./board.js');\nconst $d = require('../kingDOM/kingDOM');\n\nclass View {\n  constructor($el){\n    this.$el = $el;\n    this.board = new Board(20);\n    this.setupGrid();\n    this.intervalId = window.setInterval(this.step.bind(this),View.STEP_MILLIS);\n    $d(window).on(\"keydown\", this.handleKeyEvent.bind(this));\n  }\n\n  handleKeyEvent(event){\n    if (View.KEYS[event.keyCode]) {\n      this.board.snake.turn(View.KEYS[event.keyCode]);\n    }\n  }\n\n  render() {\n    this.updateClasses(this.board.snake.segments, \"snake\");\n    this.updateClasses([this.board.apple.position], \"apple\");\n    $d(\".score\").html(this.board.snake.score);\n  }\n\n  updateClasses(coords, className){\n    $d(`.${className}`).removeClass(className);\n    let i = 1;\n    coords.forEach((coord) => {\n      let flat = (coord.x * this.board.dim) + coord.y;\n      if (this.$li) {\n        this.$li.eq(flat).addClass(className);\n      }\n\n      if (i === coords.length && className === \"snake\"){\n\n        this.removeHeadStyle();\n\n        switch(this.board.snake.dir) {\n          case \"N\":\n            this.$li.eq(flat).addClass(\"north\");\n            break;\n          case \"E\":\n            this.$li.eq(flat).addClass(\"east\");\n            break;\n          case \"S\":\n            this.$li.eq(flat).addClass(\"south\");\n            break;\n          case \"W\":\n            this.$li.eq(flat).addClass(\"west\");\n            break;\n        }\n        this.$li.eq(flat).addClass(\"head\");\n      }\n\n      i++;\n    });\n  }\n\n  removeHeadStyle() {\n    this.$li.removeClass(\"head\");\n    this.$li.removeClass(\"north\");\n    this.$li.removeClass(\"east\");\n    this.$li.removeClass(\"south\");\n    this.$li.removeClass(\"west\");\n  }\n\n  setupGrid() {\n    let html = \"\";\n\n    for (let i = 0; i < this.board.dim; i++){\n      html += \"<ul>\";\n      for (let j = 0; j < this.board.dim; j++){\n        html += \"<li></li>\";\n      }\n      html += \"</ul>\";\n    }\n\n    this.$el.html(html);\n    this.$li = $d('li');\n  }\n\n  step() {\n\n    if (this.board.snake.segments.length > 0) {\n      this.board.snake.move();\n      this.render();\n    } else {\n      window.clearInterval(this.intervalId);\n    }\n  }\n}\n\nView.KEYS = {\n  38: \"N\",\n  39: \"E\",\n  40: \"S\",\n  37: \"W\"\n};\n\nView.STEP_MILLIS = 65;\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 3\n ** module chunks = 0\n **/","const Snake = require('./snake');\nconst Apple = require('./apple');\n\nclass Board {\n  constructor(dim) {\n    this.dim = dim;\n    this.snake = new Snake(this);\n    this.apple = new Apple(this);\n  }\n\n  static blankGrid(dim) {\n    const grid = [];\n\n    for (let i = 0; i < dim; i++) {\n      const row = [];\n      for (let j = 0; j < dim; j++) {\n        row.push(Board.BLANK_SYMBOL);\n      }\n      grid.push(row);\n    }\n\n    return grid;\n  }\n\n  render() {\n    const grid = Board.blankGrid(this.dim);\n\n    this.snake.segments.forEach((segment) => {\n      grid[segment.x][segment.y] = Snake.SYMBOL;\n    });\n\n    grid[this.apple.position.x][this.apple.position.y] = Apple.SYMBOL;\n\n    grid.map((row) => {\n      row.join(\"\");\n    }).join(\"\\n\");\n  }\n\n  validPosition(coord){\n    return (coord.x >= 0) && (coord.x < this.dim) && (coord.y >= 0) && (coord.y < this.dim);\n  }\n}\n\nBoard.BLANK_SYMBOL = '.';\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/board.js\n ** module id = 4\n ** module chunks = 0\n **/","const Coord = require('./coord');\n\nclass Snake {\n  constructor(board) {\n    this.dir = \"N\";\n    this.turning = false;\n    this.board = board;\n    this.score = 0;\n\n    const center = new Coord(Math.floor(board.dim/2), Math.floor(board.dim/2));\n    this.segments = [center];\n\n    this.growTurns = 0;\n  }\n\n  eatApple() {\n    if (this.head().equals(this.board.apple.position)) {\n      this.growTurns += 3;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isOccupying(arr) {\n    let result = false;\n    this.segments.forEach((segment) => {\n      if (segment.x === arr[0] && segment.y === arr[1]) {\n        result = true;\n        return result;\n      }\n    });\n    return result;\n  }\n\n  head() {\n    return this.segments.slice(-1)[0];\n  }\n\n  isValid() {\n    const head = this.head();\n\n    if (!this.board.validPosition(this.head())) {\n      return false;\n    }\n\n    for (let i = 0; i < this.segments.length - 1; i++) {\n      if (this.segments[i].equals(head)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  move() {\n    this.segments.push(this.head().plus(Snake.DIFFS[this.dir]));\n\n    this.turning = false;\n\n    if (this.eatApple()) {\n      this.score += 10;\n      this.board.apple.replace();\n    }\n\n    if (this.growTurns > 0) {\n      this.growTurns -= 1;\n    } else {\n      this.segments.shift();\n    }\n\n    if (!this.isValid()) {\n      this.segments = [];\n    }\n  }\n\n  turn(dir) {\n    if (Snake.DIFFS[this.dir].isOpposite(Snake.DIFFS[dir]) || this.turning) {\n      return;\n    } else {\n      this.turning = true;\n      this.dir = dir;\n    }\n  }\n}\n\nSnake.DIFFS = {\n  \"N\": new Coord(-1, 0),\n  \"E\": new Coord(0, 1),\n  \"S\": new Coord(1, 0),\n  \"W\": new Coord(0, -1)\n};\n\nSnake.SYMBOL = \"S\";\nSnake.GROW_TURNS = 3;\n\nmodule.exports = Snake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 5\n ** module chunks = 0\n **/","class Coord {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  plus(coord2) {\n    return new Coord(this.x + coord2.x, this.y + coord2.y);\n  }\n\n  equals(coord2) {\n    return (this.x === coord2.x && this.y === coord2.y);\n  }\n\n  isOpposite(coord2) {\n    return (this.x === -coord2.x) && (this.y === -coord2.y);\n  }\n}\n\nmodule.exports = Coord;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/coord.js\n ** module id = 6\n ** module chunks = 0\n **/","const Coord = require(\"./coord\");\n\nclass Apple {\n  constructor(board) {\n    this.board = board;\n    this.replace();\n  }\n\n  replace() {\n    let x = this.rand();\n    let y = this.rand();\n\n    while (this.board.snake.isOccupying([x,y])){\n      x = this.rand();\n      y = this.rand();\n    }\n\n    this.position = new Coord(x,y);\n  }\n\n  rand() {\n    return Math.floor(Math.random() * this.board.dim);\n  }\n}\n\nmodule.exports = Apple;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/apple.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}