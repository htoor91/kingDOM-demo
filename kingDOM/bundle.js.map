{"version":3,"sources":["webpack:///webpack/bootstrap a02a7361014f3242abf3","webpack:///./lib/kingDOM.js","webpack:///./lib/dom_node_collection.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,sBAAqB;AACrB,eAAc;AACd,uDAAsD;AACtD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;;;;;ACjFA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a02a7361014f3242abf3\n **/","const DOMNodeCollection = require('./dom_node_collection.js');\n\nconst functionQueue = [];\nlet docReady = false;\n\nwindow.$d = $d;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  docReady = true;\n  functionQueue.forEach((fn) => {\n    fn();\n  });\n});\n\nfunction $d(selector) {\n  if (typeof selector === 'string') {\n    return getNodesFromDOM(selector);\n  } else if (selector instanceof HTMLElement) {\n    return new DOMNodeCollection([selector]);\n  } else if (typeof selector === 'function') {\n    return documentReadyCallback(selector);\n  }\n}\n\n$d.extend = function(...args) {\n  let merged = args[0];\n  args.slice(1).forEach((obj) => {\n    Object.keys(obj).forEach((key) => {\n      merged[key] = obj[key];\n    });\n  });\n\n  return merged;\n};\n\n$d.ajax = function (options) {\n  return new Promise((resolve, reject) => {\n    const defaults = {\n      type: 'GET',\n      url: document.URL,\n      success: () => {},\n      error: () => {},\n      data: {},\n      contentType: 'application/x-www-form-urlencoded; charset=UTF-8'\n    };\n\n    const xhr = new XMLHttpRequest();\n    options = $d.extend(defaults, options);\n    options.type = options.type.toUpperCase();\n    xhr.open(options.type, options.url, true);\n\n    xhr.onload = (e) => {\n      const response = JSON.parse(xhr.response);\n\n      if (xhr.status === 200) {\n        options.success(response);\n        resolve(response);\n      } else {\n        options.error(response);\n        reject(response);\n      }\n    };\n\n    xhr.send(options.data);\n  });\n};\n\n// helper methods\n\nfunction getNodesFromDOM(selector) {\n  const nodes = document.querySelectorAll(selector);\n  const nodesArr = Array.from(nodes);\n  return new DOMNodeCollection(nodesArr);\n}\n\nfunction documentReadyCallback(fn) {\n  if (docReady) {\n    fn();\n  } else {\n    functionQueue.push(fn);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/kingDOM.js\n ** module id = 0\n ** module chunks = 0\n **/","class DOMNodeCollection {\n  constructor(nodes){\n    this.nodes = nodes;\n  }\n\n  each(cb) {\n    this.nodes.forEach(cb);\n  }\n\n  html(newHtml) {\n    if (newHtml) {\n      this.each((node) => {\n        node.innerHTML = newHtml;\n      });\n      return this.nodes;\n    } else {\n      return this.nodes[0].innerHTML;\n    }\n  }\n\n  empty() {\n    this.each((node) => {\n      node.innerHTML = \"\";\n    });\n\n    return this.nodes;\n  }\n\n  append(arg) {\n    if (this.nodes.length === 0) return;\n\n    if (typeof arg === \"string\") {\n      this.each((node) => {\n        node.innerHTML += arg;\n      });\n    } else if (arg instanceof DOMNodeCollection) {\n      this.each((parent) => {\n        arg.each((child) => {\n          parent.appendChild(child);\n        });\n      });\n    }\n    return this.nodes;\n  }\n\n  attr(attribute, value) {\n    if (typeof value === \"string\") {\n      this.each((node) => {\n        node.setAttribute(attribute, value);\n      });\n      return this.nodes;\n    } else {\n      return this.nodes[0].getAttribute(attribute);\n    }\n  }\n\n  addClass(className) {\n    const classNames = className.split(' ');\n\n    this.each((node) => {\n      classNames.forEach((name) => {\n        node.classList.add(name);\n      });\n    });\n\n    return this.nodes;\n  }\n\n  removeClass(className) {\n    const classNames = className.split(' ');\n\n    this.each((node) => {\n      classNames.forEach((name) => {\n        node.classList.remove(name);\n      });\n    });\n\n    return this.nodes;\n  }\n\n  children() {\n    const childrenArr = [];\n\n    this.each((node) => {\n      childrenArr.push(node.children);\n    });\n\n    return new DOMNodeCollection(childrenArr);\n  }\n\n  parent() {\n    const parents = [];\n\n    this.each((node) => {\n      parents.push(node.parentNode);\n    });\n\n    return new DOMNodeCollection(parents);\n  }\n\n  find(selector) {\n    const found = [];\n\n    this.each((node) => {\n      found.push(node.querySelectorAll(selector));\n    });\n\n    return new DOMNodeCollection(found);\n  }\n\n  remove() {\n    this.each((node) => {\n      node.remove();\n    });\n  }\n\n  on(action, cb) {\n    this.each((node) => {\n      node.addEventListener(action, cb);\n      node.eventCallback = cb;\n    });\n  }\n\n  off(action) {\n    this.each((node) => {\n      const cb = node.eventCallback;\n      node.removeEventListener(action, cb);\n    });\n  }\n\n}\n\nmodule.exports = DOMNodeCollection;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/dom_node_collection.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}